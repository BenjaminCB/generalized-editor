q in Query
cmd in Command
id in Id
const in Const
clause in Clause
cond in Condition
exp in Expression

q ::= \" SELECT \" id_1 \" FROM \" id_2 clause # (id,id,clause)q # select
cmd ::= \" INSERT INTO \" id_1 \" AS \" id_2 q # (id,id.q)cmd # insert
id ::= %string # ()id # ident[String]
const ::= %number # ()const # num[Int] 
        | \"'\" %string \"'\" # ()const # str[String]
clause ::= \" WHERE \" cond # (cond)clause # where 
        | \" HAVING \" cond # (cond)clause # having
cond ::= exp_1 \">\" exp_2 # (exp,exp)cond # greater 
        | exp_1 \"=\" exp_2 # (exp,exp)cond # equals
exp ::= const # (const)exp # econst | id # (id)exp # eident
